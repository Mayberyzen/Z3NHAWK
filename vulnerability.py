import requests

def check_vulnerabilities(services):
    """Improved CVE Lookup using NVD API with service matching and severity filtering."""
    
    vulnerabilities = {}
    base_url = "https://services.nvd.nist.gov/rest/json/cves/1.0"

    for port, service in services.items():
        if service != "Unknown Service":
            try:
                print(f"[*] Checking CVEs for {service} on port {port}...")
                
                
                response = requests.get(f"{base_url}?keyword={service}", timeout=10)
                
                if response.status_code == 200:
                    cve_data = response.json()
                    cve_list = []
                    
                    for entry in cve_data.get('result', {}).get('CVE_Items', []):
                        cve_id = entry['cve']['CVE_data_meta']['ID']
                        severity = entry.get('impact', {}).get('baseMetricV3', {}).get('cvssV3', {}).get('baseSeverity', 'UNKNOWN')
                        description = entry['cve']['description']['description_data'][0]['value']

                    
                        if severity in ["HIGH", "CRITICAL"]:
                            cve_list.append(f"{cve_id} ({severity}) - {description[:100]}...")  

                    vulnerabilities[port] = cve_list if cve_list else ["No critical vulnerabilities found"]
                
                else:
                    vulnerabilities[port] = ["Failed to retrieve CVE data"]
            
            except Exception as e:
                vulnerabilities[port] = [f"Error fetching CVE data: {str(e)}"]
        
        else:
            vulnerabilities[port] = ["No service detected"]

    return vulnerabilities
